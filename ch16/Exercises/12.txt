Suppose that u is the following union:

union {
    double a;
    struct {
        char b[4];
        double c;
        int d;
    } e;
    char f[4];
} u;

If char values occupy one byte, int values occupy four bytes, and double
values occupy eight bytes, how much space will a C compiler allocate for u?
(Assume that the compiler leaves no "holes" between members.)

a = 8;
e = 4 + 8 + 4 = 16
f = 4

Total = 16 ya que el elemento mas grande de la union es la estructura