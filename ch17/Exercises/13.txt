The following function is supposed to insert a new node into its proper place
in an ordered list, returning a pointer to the first node in the modified list.
Unforunately, the function doesn't work corectly in all cases. Explain what's
wrong with it and show how to fix it. Assume that the node structure is the
one defined in section 17.5.

struct node *insert_into_ordered_list(struct node *list, struct node *new_node)
{
    struct node *cur = list, *prev = NULL;
    while (cur->value <= new_node->value) {
        prev = cur;
        cur = cur->next;
    }
    prev->next = new_node;
    new_node->next = cur;
    return list;
}

La funciÃ³n no comprueba si cur es null, es decir, la lista esta vacia o si prev es null, es decir,
es el primer nodo de la lista
Para solucionar este problema hacemos lo siguiente:

structu node *insert_into_order_lst(structu node *list, struct node *new_node)
{
    struct node *cur = list, *prev = NULL;
    for(; cur; prev = cur; cur = cur->next) {
        if(cur->value > new_node->value)
            break;
    }
    if(list == NULL) {
        return new_node; // Si la lista esta vacia
    }
    else if (prev == NULL){
        list->next = new_node;
        new_node->next = cur; // Se inserta antes del primer nodo
    }
    else {
        prev->next = new_node;
        new_node->next = cur;
    }
    return list;
}

